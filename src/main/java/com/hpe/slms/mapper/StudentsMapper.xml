<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hpe.slms.mapper.StudentsMapper">
  <resultMap id="BaseResultMap" type="com.hpe.slms.pojo.Students">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="sname" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sex" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="direction" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="clzname" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="schoolname" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="depatment" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="major" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="card" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="parentname" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="parentphone" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sname, sex, direction, clzname, schoolname, depatment, major, card, phone, address, 
    parentname, parentphone
  </sql>
  <select id="selectByExample" parameterType="com.hpe.slms.pojo.StudentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from students
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from students
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hpe.slms.pojo.StudentsExample">
    delete from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hpe.slms.pojo.Students">
    insert into students (id, sname, sex, 
      direction, clzname, schoolname, 
      depatment, major, card, 
      phone, address, parentname, 
      parentphone)
    values (#{id,jdbcType=INTEGER}, #{sname,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{direction,jdbcType=VARCHAR}, #{clzname,jdbcType=VARCHAR}, #{schoolname,jdbcType=VARCHAR}, 
      #{depatment,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, #{card,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{parentname,jdbcType=VARCHAR}, 
      #{parentphone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hpe.slms.pojo.Students">
    insert into students
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sname != null">
        sname,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="direction != null">
        direction,
      </if>
      <if test="clzname != null">
        clzname,
      </if>
      <if test="schoolname != null">
        schoolname,
      </if>
      <if test="depatment != null">
        depatment,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="card != null">
        card,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="parentname != null">
        parentname,
      </if>
      <if test="parentphone != null">
        parentphone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sname != null">
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="direction != null">
        #{direction,jdbcType=VARCHAR},
      </if>
      <if test="clzname != null">
        #{clzname,jdbcType=VARCHAR},
      </if>
      <if test="schoolname != null">
        #{schoolname,jdbcType=VARCHAR},
      </if>
      <if test="depatment != null">
        #{depatment,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="card != null">
        #{card,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="parentname != null">
        #{parentname,jdbcType=VARCHAR},
      </if>
      <if test="parentphone != null">
        #{parentphone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hpe.slms.pojo.StudentsExample" resultType="java.lang.Long">
    select count(*) from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update students
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sname != null">
        sname = #{record.sname,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.direction != null">
        direction = #{record.direction,jdbcType=VARCHAR},
      </if>
      <if test="record.clzname != null">
        clzname = #{record.clzname,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolname != null">
        schoolname = #{record.schoolname,jdbcType=VARCHAR},
      </if>
      <if test="record.depatment != null">
        depatment = #{record.depatment,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.card != null">
        card = #{record.card,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.parentname != null">
        parentname = #{record.parentname,jdbcType=VARCHAR},
      </if>
      <if test="record.parentphone != null">
        parentphone = #{record.parentphone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update students
    set id = #{record.id,jdbcType=INTEGER},
      sname = #{record.sname,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      direction = #{record.direction,jdbcType=VARCHAR},
      clzname = #{record.clzname,jdbcType=VARCHAR},
      schoolname = #{record.schoolname,jdbcType=VARCHAR},
      depatment = #{record.depatment,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      card = #{record.card,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      parentname = #{record.parentname,jdbcType=VARCHAR},
      parentphone = #{record.parentphone,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hpe.slms.pojo.Students">
    update students
    <set>
      <if test="sname != null">
        sname = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="direction != null">
        direction = #{direction,jdbcType=VARCHAR},
      </if>
      <if test="clzname != null">
        clzname = #{clzname,jdbcType=VARCHAR},
      </if>
      <if test="schoolname != null">
        schoolname = #{schoolname,jdbcType=VARCHAR},
      </if>
      <if test="depatment != null">
        depatment = #{depatment,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="card != null">
        card = #{card,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="parentname != null">
        parentname = #{parentname,jdbcType=VARCHAR},
      </if>
      <if test="parentphone != null">
        parentphone = #{parentphone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hpe.slms.pojo.Students">
    update students
    set sname = #{sname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      direction = #{direction,jdbcType=VARCHAR},
      clzname = #{clzname,jdbcType=VARCHAR},
      schoolname = #{schoolname,jdbcType=VARCHAR},
      depatment = #{depatment,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      card = #{card,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      parentname = #{parentname,jdbcType=VARCHAR},
      parentphone = #{parentphone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

<select id="getallStudent" parameterType="java.lang.String" resultMap="BaseResultMap">
select
<include refid="Base_Column_List" />FROM  students
where clzname = #{clzname}
</select>


  <select id="getSelectStudent" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />FROM  students
    where sname = #{sname}
  </select>

  <select id="adminSelectStudent" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />FROM  students
    ORDER BY clzname
  </select>



  <select id="getScores" parameterType="java.lang.String" resultMap="getScores">
    select
    * FROM  students t,scores c
    where clzname=#{clzname} AND t.id=c.stuid

  </select>
  <resultMap id="getScores" type="com.hpe.slms.pojo.Students">
    <id  property="id" column="id" />
    <result property="sname" column="sname"  />
    <result property="sex" column="sex" />
    <result property="direction" column="direction" />
    <result property="clzname" column="clzname"  />
    <result property="schoolname" column="schoolname" />
    <result property="depatment" column="depatment" />
    <result property="major" column="major" />
    <result property="card" column="card" />
    <result property="phone" column="phone" />
    <result property="address" column="address" />
    <result property="parentname" column="parentname" />
    <result property="parentphone" column="parentphone"  />
<collection property="scores" ofType="com.hpe.slms.pojo.Scores">
  <id  property="id" column="id" />
  <result property="stuid" column="stuid"  />
  <result property="coursename" column="coursename" />
  <result property="proscore" column="proscore" />
  <result property="examscore" column="examscore"  />
  <result property="totalscore" column="totalscore" />
  <result property="createtime" column="createtime" />


</collection>
  </resultMap>
</mapper>
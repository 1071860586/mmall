<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hpe.slms.mapper.ScoresMapper">
  <resultMap id="BaseResultMap" type="com.hpe.slms.pojo.Scores">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="stuid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="coursename" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="proscore" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="examscore" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="totalscore" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="createtime" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, stuid, coursename, proscore, examscore, totalscore, createtime
  </sql>
  <select id="selectByExample" parameterType="com.hpe.slms.pojo.ScoresExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from scores
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from scores
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="changePhoto" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from scores
    where stuid = #{stuid,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from scores
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hpe.slms.pojo.ScoresExample">
    delete from scores
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hpe.slms.pojo.Scores">
    insert into scores (id, stuid, coursename, 
      proscore, examscore, totalscore, 
      createtime)
    values (#{id,jdbcType=INTEGER}, #{stuid,jdbcType=INTEGER}, #{coursename,jdbcType=VARCHAR}, 
      #{proscore,jdbcType=DOUBLE}, #{examscore,jdbcType=DOUBLE}, #{totalscore,jdbcType=DOUBLE}, 
      #{createtime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hpe.slms.pojo.Scores">
    insert into scores
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stuid != null">
        stuid,
      </if>
      <if test="coursename != null">
        coursename,
      </if>
      <if test="proscore != null">
        proscore,
      </if>
      <if test="examscore != null">
        examscore,
      </if>
      <if test="totalscore != null">
        totalscore,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuid != null">
        #{stuid,jdbcType=INTEGER},
      </if>
      <if test="coursename != null">
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="proscore != null">
        #{proscore,jdbcType=DOUBLE},
      </if>
      <if test="examscore != null">
        #{examscore,jdbcType=DOUBLE},
      </if>
      <if test="totalscore != null">
        #{totalscore,jdbcType=DOUBLE},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hpe.slms.pojo.ScoresExample" resultType="java.lang.Long">
    select count(*) from scores
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update scores
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stuid != null">
        stuid = #{record.stuid,jdbcType=INTEGER},
      </if>
      <if test="record.coursename != null">
        coursename = #{record.coursename,jdbcType=VARCHAR},
      </if>
      <if test="record.proscore != null">
        proscore = #{record.proscore,jdbcType=DOUBLE},
      </if>
      <if test="record.examscore != null">
        examscore = #{record.examscore,jdbcType=DOUBLE},
      </if>
      <if test="record.totalscore != null">
        totalscore = #{record.totalscore,jdbcType=DOUBLE},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update scores
    set id = #{record.id,jdbcType=INTEGER},
      stuid = #{record.stuid,jdbcType=INTEGER},
      coursename = #{record.coursename,jdbcType=VARCHAR},
      proscore = #{record.proscore,jdbcType=DOUBLE},
      examscore = #{record.examscore,jdbcType=DOUBLE},
      totalscore = #{record.totalscore,jdbcType=DOUBLE},
      createtime = #{record.createtime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hpe.slms.pojo.Scores">
    update scores
    <set>
      <if test="stuid != null">
        stuid = #{stuid,jdbcType=INTEGER},
      </if>
      <if test="coursename != null">
        coursename = #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="proscore != null">
        proscore = #{proscore,jdbcType=DOUBLE},
      </if>
      <if test="examscore != null">
        examscore = #{examscore,jdbcType=DOUBLE},
      </if>
      <if test="totalscore != null">
        totalscore = #{totalscore,jdbcType=DOUBLE},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hpe.slms.pojo.Scores">
    update scores
    set stuid = #{stuid,jdbcType=INTEGER},
      coursename = #{coursename,jdbcType=VARCHAR},
      proscore = #{proscore,jdbcType=DOUBLE},
      examscore = #{examscore,jdbcType=DOUBLE},
      totalscore = #{totalscore,jdbcType=DOUBLE},
      createtime = #{createtime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


</mapper>